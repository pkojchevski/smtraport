{"version":3,"sources":["app.js","controlers/capacityController.js","controlers/dailyController.js","controlers/loginController.js","controlers/monthlyController.js","controlers/NavCtrl.js","controlers/weeklyController.js","controlers/yearlyController.js","directives/directives.js","filters/filters.js","services/services.js"],"names":[],"mappingsxnZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvnptkfile":"../app.min.js","sourcesContent":["var app=angular.module(\"myApp\",['ngRoute',\"ngMessages\",\"myApp.controllers\", \"myApp.services\",\"myApp.directives\",\r\n    '720kb.datepicker',\"myApp.filters\",'angular-growl']).constant('_', window._);\r\n\r\napp.config([\"growlProvider\", function(growlProvider) {\r\n     growlProvider.globalTimeToLive(3000);\r\n}]);\r\n\r\n\r\napp.config(['$routeProvider','$httpProvider','growlProvider',\r\nfunction($routeProvider, $httpProvider, growlProvider) {\r\n    $routeProvider\r\n                .when(\"/login\", {\r\n                templateUrl:\"views/login.html\",\r\n                controller:\"loginController\"\r\n            })\r\n                .when(\"/daily\", {\r\n                templateUrl:\"views/daily.html\",\r\n                controller:\"dailyController\",\r\n                // resolve   : {\r\n                //   loggedin : checkLoggedIn\r\n                // }\r\n    })\r\n                .when(\"/weekly\", {\r\n                    templateUrl:\"views/weekly.html\",\r\n                    controller:\"weeklyController\"\r\n    })\r\n                .when(\"/monthly\", {\r\n                templateUrl:\"views/monthly.html\",\r\n                controller:\"monthlyController\"\r\n    })\r\n                .when(\"/yearly\", {\r\n                templateUrl:\"views/yearly.html\",\r\n                controller:\"yearlyController\"\r\n    })\r\n                .when(\"/capacity\", {\r\n                templateUrl:\"views/capacity.html\",\r\n                controller:\"capacityController\",\r\n                resolve   : {\r\n                  loggedin : checkLoggedIn\r\n                }\r\n    }).\r\n                otherwise({\r\n                  redirectTo:'/'\r\n                });\r\n\r\n\r\n    $httpProvider.interceptors.push(function($q, $location, $rootScope, messages) {\r\n      return {\r\n        response:function(response) {\r\n          $rootScope.unauthorized = true;\r\n          return response;\r\n        },\r\n        responseError:function(response) {\r\n          if(response.status === 401) {\r\n            $location.url('/login');\r\n            return $q.reject(response);\r\n            console.log(\"unauthorized\");\r\n            $rootScope.unauthorized = false;\r\n          };\r\n          if(response.status === 404) {\r\n            $location.url('/login');\r\n            console.log(\"user not found\");\r\n            return $q.reject(response);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  growlProvider.globalPosition('bottom-center');\r\n\r\n  }]);\r\n\r\n    var checkLoggedIn = function ($q, $location, $http, $timeout, $rootScope) {\r\n      var deferred = $q.defer();\r\n      $http.get('http://localhost:3000/loggedin').success(function(user) {\r\n        $rootScope.errorMessage = null;\r\n        if(user != 0) {\r\n          console.log('checkLoggedIn');\r\n          $rootScope.currentUser = user;\r\n          if (user.role === 'admin') {\r\n            $rootScope.checkRole = 'false';\r\n          }\r\n           if (user.role !== 'admin') {\r\n            $rootScope.checkRole = 'true';\r\n          }\r\n          deferred.resolve();\r\n        } else {\r\n          $rootScope.errorMessage = \"You need to login\";\r\n          deferred.reject();\r\n          $location.url('/login');\r\n        }\r\n      });\r\n      console.dir(\"deferred.promise:\"+ JSON.stringify(deferred.promise));\r\n      return deferred.promise;\r\n    };\r\n\r\n\r\n\r\n  app.config(function ($httpProvider) {\r\n  $httpProvider.defaults.headers.common = {};\r\n  $httpProvider.defaults.headers.put['Content-Type'] =  'application/json';\r\n  $httpProvider.defaults.headers.post['Content-Type'] =  'application/json';\r\n  $httpProvider.defaults.headers.delete = {};\r\n  $httpProvider.defaults.headers.patch = {};\r\n  $httpProvider.defaults.headers.options = {};\r\n});\r\n","angular.module(\"myApp.controllers\",[])\r\n        .controller(\"capacityController\",[\"$rootScope\", \"$scope\", \"$filter\", \"products\", \"productService\",\r\n         \"messages\",\"productsByOpis\",\r\n    function($rootScope, $scope, $filter, products, productService, messages, productsByOpis) {\r\n\r\n             $scope.productIndex=\"\";\r\n             $scope.productOpis=\"\";\r\n\r\n       $scope.searchProducts=function() {\r\n           if($scope.productIndex === \"\" && $scope.productOpis === \"\") {\r\n          products.query().$promise.then(function(data) {\r\n              $scope.products=data;\r\n\r\n           });\r\n              }\r\n           if($scope.productIndex !== \"\" && $scope.productOpis === \"\") {\r\n              products.get({\"productIndex\":$scope.productIndex}).$promise.then(function(data) {\r\n                $scope.products=[];\r\n                $scope.products.push(data);\r\n           });\r\n           }\r\n           if($scope.productOpis !== \"\" && $scope.productIndex === \"\") {\r\n             console.log(\"opissssssssssssss\");\r\n            productsByOpis.query({\"description\":$scope.productOpis}).$promise.then(function(data) {\r\n              $scope.products=data;\r\n           });\r\n\r\n           }\r\n\r\n       };\r\n       $scope.editProduct=function(p) {\r\n         console.log('p:'+JSON.stringify(p));\r\n        $scope.id=p._id;\r\n        $scope.productIndex=p.productIndex;\r\n        $scope.productOpis=p.description;\r\n        $scope.pcbsnapanel=p.pcbsonpanel;\r\n        $scope.pcbsnagodzina=p.pcbs100;\r\n\r\n        console.log('valid:'+$scope.capacityForm.$valid);\r\n\r\n       };\r\n\r\n         $scope.deleteProduct=function(p) {\r\n           productService.delete({id:p._id}, function(success) {\r\n             console.log(success);\r\n              messages(\"delete\");\r\n              $scope.products=[];\r\n              console.log(\"list is updated\");\r\n           });\r\n       };\r\n\r\n       $scope.addProduct = function (isValid) {\r\n        $scope.submitted = true;\r\n         console.log(\"isValid:\" + isValid);\r\n         if(isValid) {\r\n           var product = {\r\n               _id:$scope.id || \"\",\r\n               productIndex:$scope.productIndex,\r\n               description:$scope.productOpis,\r\n               pcbsonpanel:$scope.pcbsnapanel,\r\n               pcbs100:$scope.pcbsnagodzina,\r\n               username:$rootScope.currentUser.username,\r\n               createdAt:new Date().toJSON().slice(0,10)\r\n               };\r\n           var id_exists;\r\n           products.query().$promise.then(function(data) {\r\n           id_exists = $filter('findId')(product._id, data);\r\n           console.log('id_exists:'+id_exists);\r\n        if (id_exists) {\r\n             productService.update({\"id\":$scope.id}, product).$promise.then(function(success) {\r\n               $scope.clearFields();\r\n               $scope.capacityForm.$setPristine();\r\n              //  $scope.capacityForm.$setValidity();\r\n              //  $scope.capacityForm.$setUntouched();\r\n               messages(\"update\");\r\n              $scope.products = [product];\r\n              console.log('product update:'+JSON.stringify(success));\r\n        });\r\n      } else {\r\n        products.save(product, function(success) {\r\n          $scope.clearFields();\r\n          messages(\"add\");\r\n          $scope.products = [product];\r\n            console.log('product save:'+JSON.stringify(success));\r\n        });\r\n      }\r\n         });\r\n\r\n}\r\n\r\n   };\r\n\r\n       $scope.clearFields=function() {\r\n            $scope.id=\"\";\r\n            $scope.productIndex=\"\";\r\n            $scope.productOpis=\"\";\r\n            $scope.pcbsnapanel=\"\";\r\n            $scope.pcbsnagodzina=\"\";\r\n            $scope.products=[];\r\n             $scope.capacityForm.$setPristine();\r\n            // $scope.capacityForm.$setValidity();\r\n            // $scope.capacityForm.$setUntouched();\r\n          }\r\n  }]);\r\n","angular.module(\"myApp.controllers\")\r\n    .controller(\"dailyController\", [\"$scope\", \"$timeout\", \"$http\", \"$filter\", \"$interval\",\"dailyProduct\", \"dailyProductService\",\r\n    \"columnChart\", \"pieChart\", \"dailyRecord\", \"dailyRecordService\", \"weeklyRecord\",\"weeklyRecordService\", \"dailyRecordServiceDel\", \"weeklyProduct\",\r\n    \"dailyRecordServiceDel\", \"weeklyProductService\", \"columnCharPP\", \"dailyRecordByDate\", \"dailyProductByDate\",\"_\",\"weeklyProductForData\",\r\n    function($scope, $timeout, $http, $filter,$interval, dailyProduct, dailyProductService, columnChart,\r\n            pieChart, dailyRecord, dailyRecordService, weeklyRecord,weeklyRecordService, dailyRecordServiceDel, weeklyProduct,\r\n            dailyRecordServiceDel, weeklyProductService, columnCharPP, dailyRecordByDate, dailyProductByDate, _, weeklyProductForData) {\r\n\r\n        $scope.buttonClicked = false;\r\n        $scope.productionDate = new Date().toJSON().slice(0,10);\r\n        //$scope.productionDate = new Date(\"2016-11-24\").toJSON().slice(0,10);\r\n        console.log(\"productionDate:\"+$scope.productionDate);\r\n        $scope.ppDailyChart = [];\r\n        $scope.npDailyChart = [];\r\n        $scope._=_;\r\n        function init() {\r\n          console.log(\"init is runing\");\r\n        $scope.hour =  [\"06-07\",\"07-08\",\"08-09\",\"09-10\",\"10-11\",\"11-12\",\"12-13\",\"13-14\",\r\n                     \"14-15\",\"15-16\",\"16-17\",\"17-18\",\"18-19\",\"19-20\",\"20-21\",\"21-22\"];\r\n\r\n        $scope.prodData = {\r\n            efficiency:[\"eff[%]\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            lineOpened:[\"Lin.Otwarta[min]\",60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60],\r\n            lineClosed:[\"Lin.Zamkn.[min]\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            lineEff:[\"Lin.Eff.[min]\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            npStops:[\"Niepl.Przest.[min]\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            target:[\"cel[%]\",80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80],\r\n            product1:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product2:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product3:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product4:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product5:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product6:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product7:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product8:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product9:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            product10:[\"#pcbs/g\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n          };\r\n\r\n        $scope.np = {\r\n            modelChange:[\"Zmiana modelu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            changeSide:[\"Zmiana strony\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            changeVersion:[\"Zmiana wer.rynk.\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            missingComponent:[\"Brak komponentu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            componentVerification:[\"Werifikacja komponentu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            wrongPlStencil:[\"Żłe ułożony szablon\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            damagedStencil:[\"Uszkodzony szablon\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            DrukCleaningStencil:[\"Drukarka:Czyszczenie szablonu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            DrukAddingPaste:[\"Drukarka:Dodanie pasty\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            DrukDodanieVigon:[\"Drukarka:Dodanie vigon\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            DrukProgramCorrection:[\"Drukarka:Korekprog\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            DrukPaperChange:[\"Drukarka:Wympapieru\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPBadmark:[\"PNP:Badmarki\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPpickComponent:[\"PNP:pobieranie komponentu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPprogramCorrection:[\"PNP:Korekcja programu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPtrayChange:[\"PNP:wymiana tacki\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPcleaningNozzle:[\"PNP:czyszczenie ssawek\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPfeederChange:[\"PNP:wymiana feedera\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            PNPripedFoil:[\"PNP:Zerwana taśma\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            Reflow:[\"Piec\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            AOIcorrection:[\"AOI korekcja programu\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            Transport:[\"Transport\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            Separation:[\"Separacja płytek\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            Validation:[\"Walidacja 1 płytki\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            othernp1:[\"Inny\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            othernp2:[\"Inny\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n            othernp3:[\"Inny\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n      };\r\n\r\n      $scope.pp = {\r\n        linePreparing:[\"Przygotow.Linii\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        meeting:[\"Zebranie\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        pause:[\"Przerwa\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        noPlan:[\"Zakończenie plany\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        preventive:[\"Konserwacja\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        inventory:[\"Inwentura\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        testy:[\"Testy(Trace, NPI,..)\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        missOperator:[\"Brak operatorów\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        missComponent:[\"Brak Komponentów\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        qualityIssue:[\"Problem Jakościowy\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        otherpp1:[\"inny\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        otherpp2:[\"inny\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n        otherpp3:[\"inny\",\"\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n        };\r\n\r\n           $scope.dailyRecords=[\r\n               {\r\n             dailyRecordsId:\"\",\r\n             arrName:\"\",\r\n             arrIndex:\"\",\r\n             arrIndexValue:\"\"\r\n         }];\r\n\r\n         $scope.product = {};\r\n\r\n         $scope.products=[product1={},product2={},product3={},product4={},product5={},product6={},\r\n           product7={},product8={},product9={},product10={}];\r\n\r\n$scope.prodDataTot = {\r\n    efficiencyTot:[0,0,0],\r\n    lineOpenedTot:[0,0,0,0],\r\n    lineClosedTot:[0,0,0,0],\r\n    lineEffTot:[0,0,0,0],\r\n    npStopsTot:[0,0,0,0],\r\n    targetTot:[0,0,0],\r\n    product1Tot:[0,0,0],\r\n    product2Tot:[0,0,0],\r\n    product3Tot:[0,0,0],\r\n    product4Tot:[0,0,0],\r\n    product5Tot:[0,0,0],\r\n    product6Tot:[0,0,0],\r\n    product7Tot:[0,0,0],\r\n    product8Tot:[0,0,0],\r\n    product9Tot:[0,0,0],\r\n    product10Tot:[0,0,0]\r\n};\r\n\r\n\r\n$scope.ppTot = {\r\n    linePreparingTot:[0,0,0,0],\r\n    meetingTot:[0,0,0,0],\r\n    pauseTot:[0,0,0,0],\r\n    noPlanTot:[0,0,0,0],\r\n    preventiveTot:[0,0,0,0],\r\n    inventoryTot:[0,0,0,0],\r\n    testyTot:[0,0,0,0],\r\n    missOperatorTot:[0,0,0,0],\r\n    missComponentTot:[0,0,0,0],\r\n    qualityIssueTot:[0,0,0,0],\r\n    otherpp1Tot:[0,0,0,0],\r\n    otherpp2Tot:[0,0,0,0],\r\n    otherpp3Tot:[0,0,0,0]\r\n};\r\n\r\n\r\n$scope.npTot ={\r\n   modelChangeTot:[0,0,0,0],\r\n   changeSideTot:[0,0,0,0],\r\n   changeVersionTot:[0,0,0,0],\r\n   missingComponentTot:[0,0,0,0],\r\n   componentVerificationTot:[0,0,0,0],\r\n   wrongPlStencilTot:[0,0,0,0],\r\n   damagedStencilTot:[0,0,0,0],\r\n   DrukCleaningStencilTot:[0,0,0,0],\r\n   DrukAddingPasteTot:[0,0,0,0],\r\n   DrukDodanieVigonTot:[0,0,0,0],\r\n   DrukProgramCorrectionTot:[0,0,0,0],\r\n   DrukPaperChangeTot:[0,0,0,0],\r\n   PNPBadmarkTot:[0,0,0,0],\r\n   PNPpickComponentTot:[0,0,0,0],\r\n   PNPprogramCorrectionTot:[0,0,0,0],\r\n   PNPtrayChangeTot:[0,0,0,0],\r\n   PNPcleaningNozzleTot:[0,0,0,0],\r\n   PNPfeederChangeTot:[0,0,0,0],\r\n   PNPripedFoilTot:[0,0,0,0],\r\n   ReflowTot:[0,0,0,0],\r\n   AOIcorrectionTot:[0,0,0,0],\r\n   TransportTot:[0,0,0,0],\r\n   SeparationTot:[0,0,0,0],\r\n   ValidationTot:[0,0,0,0],\r\n   othernp1Tot:[0,0,0,0],\r\n   othernp2Tot:[0,0,0,0],\r\n   othernp3Tot:[0,0,0,0]\r\n};\r\n        }\r\n\r\n/////////////// initialization ////////////////////\r\n        init();\r\n\r\n// refreshing page\r\nvar refreshProducts = function() {\r\n     dailyProductByDate.query({\"prodData\":$scope.productionDate}).$promise.then(function(data) {\r\n          for (var i = 0; i<$scope.products.length; i++) {\r\n            $scope.products[i] = data[i];\r\n          }\r\n          console.log(\"dailyproducts:\"+JSON.stringify($scope.products));\r\n    });\r\n};\r\n//\r\n$scope.saveShowProductsDaily = function(arr) {\r\n  console.log(\"save product:\"+JSON.stringify(arr));\r\n    dailyProduct.save(arr, function(success) {\r\n        refreshProducts();\r\n});\r\n\r\n};\r\n\r\n\r\n\r\n$scope.refreshDailyData = function() {\r\n  var o ={};\r\n    dailyRecordByDate.query({\"prodData\":$scope.productionDate}).$promise.then(function(data) {\r\n             //write data in objects\r\n           for(var i = 0; i < data.length; i++){\r\n               var obj = data[i].name.split(\" \")[0];\r\n               var klasa = data[i].name.split(\" \")[1];\r\n               var id = data[i].index;\r\n               var name = data[i].name;\r\n               var x,y = {};\r\n                   //write data from db to local objects\r\n               if ($filter(\"checkForNumbers\")(name, parseInt(id), parseInt(data[i].value))) {\r\n                  $scope.$eval(obj+\".\"+klasa)[id] = data[i].value;\r\n                }\r\n                if (!($filter(\"checkForNumbers\")(name, parseInt(id), parseInt(data[i].value)))) {\r\n                   $scope.$eval(obj + \".\" + klasa)[id] = data[i].details;\r\n                 }\r\n               };\r\n                  //calculations\r\n                     $filter('calcStops')($scope.prodData.lineClosed, $scope.pp);\r\n                     $filter('calcStops')($scope.prodData.npStops,$scope.np);\r\n                     $scope.prodData.lineOpened=$filter(\"getLineOpened\")($scope.prodData.lineClosed);\r\n                     $scope.prodData.efficiency=$filter(\"calcEffArr\")($scope.products,\r\n                     $scope.prodData.lineOpened,$scope.prodData);\r\n                     $scope.prodData.lineEff=$filter(\"calcLineEff\")($scope.prodData.efficiency, $scope.prodData.lineOpened);\r\n                     $filter('calcTot')($scope.prodData,$scope.prodDataTot);\r\n                     $filter('calcTot')($scope.pp, $scope.ppTot);\r\n                     $filter('calcTot')($scope.np, $scope.npTot);\r\n                     $scope.prodDataTot.efficiencyTot[0]=$filter(\"calcAverageEff\")(1,8,$scope.prodData.efficiency);\r\n                     $scope.prodDataTot.efficiencyTot[1]=$filter(\"calcAverageEff\")(9,16,$scope.prodData.efficiency);\r\n                     $scope.prodDataTot.efficiencyTot[2]=$filter(\"calcAvgEffTot\")($scope.prodDataTot.efficiencyTot[1],$scope.prodDataTot.efficiencyTot[0]);\r\n                     $filter('calcRatioProdData')($scope.prodDataTot);\r\n                     $filter('calcRatio')($scope.npTot, $scope.prodDataTot, \"npStopsTot\");\r\n                     $filter('calcRatio')($scope.ppTot, $scope.prodDataTot, \"lineClosedTot\");\r\n                              //planed stops chart\r\n                   pieChart(parseInt($scope.prodDataTot.lineOpenedTot[3]),'Lotw.',parseInt($scope.prodDataTot.lineClosedTot[3]),'PP','container1');\r\n                              //unplaned stops chart\r\n                   pieChart(parseInt($scope.prodDataTot.lineEffTot[3]),'Leff.',parseInt($scope.prodDataTot.npStopsTot[3]),'NP','container2');\r\n   //                           //wydajnośc SMT chart\r\n                   columnChart($filter(\"getArrayNumbers\")($scope.prodData.efficiency),$filter(\"getArrayNumbers\")($scope.prodData.target),$scope.hour,'container');\r\n   ////                           //planned stops chart\r\n                    $filter('sorter')($filter(\"getEff\")($scope.ppTot), $filter(\"getNames\")($scope.pp), 'x');\r\n                    $filter('sorter')($filter(\"getEff\")($scope.ppTot), $filter(\"getNames\")($scope.pp), 'y')\r\n  //                  columnCharPP(x.xval,[],y.yval,'container10');\r\n  //  //                           //unplaned stops chart\r\n  //                  columnCharPP($filter(\"getEff\")($scope.npTot),[],$filter(\"getNames\")($scope.np),'container11');\r\n  //                 console.log('sorter:', $filter('sorter')($filter(\"getEff\")($scope.npTot), $filter(\"getNames\")($scope.np), 'x'));\r\n\r\n              });\r\n            };\r\n\r\n        $scope.addDailyRecord = function(o) {\r\n            dailyRecord.get({\"recordId\":o.recordId}).$promise.then(\r\n          function(data) {\r\n            console.log(\"put data:\"+JSON.stringify(data))\r\n              if (JSON.stringify(data) !== '{}') {\r\n                //put\r\n                dailyRecordService.update({\"recordId\":o.recordId}, o).$promise.then(function(success) {\r\n                      console.log(\"record is updated\");\r\n                });\r\n            } else {\r\n              dailyRecord.save(o, function(success) {\r\n                    console.log(\"record is saved\");\r\n              });\r\n            }\r\n          });\r\n        };\r\n\r\n        $scope.addWeeklyProduct = function(o) {\r\n            weeklyProductForData.query({\"prodData\":o.prodData}).$promise.then(\r\n          function(data) {\r\n              var updateProduct;\r\n            console.log(\"xyxyxyxyxyxyxy:\"+JSON.stringify(data));\r\n              if (JSON.stringify(data) !== '[]') {\r\n                updateProduct = angular.copy(o);\r\n                for (var i = 0 ; i < data.length; i++) {\r\n                  if(data[i].productIndex === updateProduct.productIndex) {\r\n                    updateProduct.dailyQuantity = parseInt(updateProduct.dailyQuantity) + parseInt(data[0].dailyQuantity);\r\n                    updateProduct._id = data[0]._id;\r\n                  }\r\n                }\r\n                //put\r\n                weeklyProductService.update({\"id\":updateProduct._id}, updateProduct).$promise.then(function(success) {\r\n                      console.log(\"product is updated\");\r\n                });\r\n            } else {\r\n\r\n              weeklyProduct.save(o, function(success) {\r\n                    console.log(\"product is saved!\");\r\n              });\r\n            }\r\n               console.log(\"ooooooooooooooooo:\"+JSON.stringify(o));\r\n            dailyProductService.delete({\"id\":o._id}, function(success) {\r\n             console.log(\"success:\"+ JSON.stringify(success));\r\n                   console.log(\"products deleted!\");\r\n               });\r\n          });\r\n        };\r\n\r\n        $scope.addWeeklyRecord = function(o) {\r\n          weeklyRecord.get({\"weeklyRecordId\":o.weeklyRecordId}).$promise.then(\r\n          function(data) {\r\n              if (JSON.stringify(data) !== '{}') {\r\n                //put\r\n                o._id = data._id;\r\n                weeklyRecordService.update({\"id\":o._id}, o).$promise.then(function(success) {\r\n                      console.log(\"record is updated\");\r\n                });\r\n            } else {\r\n              weeklyRecord.save(o, function(success) {\r\n                    console.log(\"record is saved\");\r\n              });\r\n            }\r\n             });\r\n        };\r\n\r\n///--------------------------------refreshh-------------------------------\r\n\r\n$scope.refreshDailyData();\r\n    refreshProducts();\r\n   $interval(function() {\r\n     console.log('interval is running');\r\n    $scope.refreshDailyData();\r\n  }, 600000);\r\n\r\n//\r\n// //--------------save weekly records1-------------------------------//\r\n\r\nvar saveWeekRec = function() {\r\n    var weekObj={};\r\n    var textarr;\r\n    var textarr1;\r\n    var name;\r\n    var arrTotNames=$filter(\"getAllNames\")($scope.npTot,\"npTot.\", $scope.ppTot,\"ppTot.\", $scope.prodDataTot,\"prodDataTot.\");\r\n        for(var i = 0; i < arrTotNames.length; i++) {\r\n            if($scope.$eval(arrTotNames[i])[2] !== 0 && arrTotNames[i].indexOf(\"product\") === -1) {\r\n               textarr = arrTotNames[i].split(\".\")[1];\r\n               textarr = textarr.substring(0, textarr.length-3);\r\n               textarr1 = arrTotNames[i].split(\".\")[0];\r\n               textarr1 = textarr1.substring(0, textarr1.length-3);\r\n               name = (arrTotNames[i]);\r\n                   weekObj = {\r\n                        weeklyRecordId:textarr + i + $scope.productionDate,\r\n                        name:arrTotNames[i],\r\n                        text:$scope.$eval(textarr1 + \".\" + textarr)[0],\r\n                        value:$scope.$eval(arrTotNames[i])[2],\r\n                        dateOfProd:moment($scope.productionDate),\r\n                        details:getDetails(name)//$scope.$eval(name.substring(0, name.length-3))[1] || \"\"\r\n                      };\r\n\r\n           }\r\n              }\r\n              dailyRecord.query().$promise.then(function(data) {\r\n                 for(var i = 0; i < data.length; i++) {\r\n                   dailyRecordServiceDel.delete({\"id\":data[i]._id}, function(success) {\r\n                     console.log(\"delete records success\");\r\n                  });\r\n                }\r\n\r\n           });\r\n       };\r\n\r\nvar getDetails = function(name) {\r\n  var obj1 = (name).split(\".\")[0];\r\n  var arr = (name).split(\".\")[1];\r\nif(obj1 !== \"prodDataTot\") {\r\n  return $scope.$eval(\r\n    obj1.substring(0, obj1.length-3) + \".\" +\r\n    arr.substring(0, arr.length-3)\r\n  )[1];\r\n} else {\r\n  return \"\";\r\n}\r\n\r\n}\r\n\r\n\r\n//save weekly production//////////////////////////////\r\nvar saveWeekProd = function() {\r\n    var product;\r\n    var i;\r\n    dailyProduct.query().$promise.then(function(data) {\r\n        for(i =0; i < data.length; i++) {\r\n          console.log(\"produuuuuuuuucts:\"+JSON.stringify(data[i]));\r\n            product = data[i];\r\n            //product.prodData = $scope.productionDate;\r\n            $scope.addWeeklyProduct(product);\r\n        }\r\n\r\n    });\r\n};\r\n\r\n// //-----------------clicking reset button-------------------------------//\r\n$scope.reset = function() {\r\n    console.log(\"button clicked!\");\r\n    saveWeekProd();\r\n    saveWeekRec();\r\n\r\n    $scope.product = {};\r\n    $scope.products=[product1={},product2={},product3={},product4={},product5={},product6={},\r\n      product7={},product8={},product9={},product10={}];\r\n\r\n    init();\r\n      pieChart(parseInt($scope.prodDataTot.lineOpenedTot[3]),'Lotw.',parseInt($scope.prodDataTot.lineClosedTot[3]),'PP','container1');\r\n//                           //unplaned stops chart\r\n      pieChart(parseInt($scope.prodDataTot.lineEffTot[3]),'Leff.',parseInt($scope.prodDataTot.npStopsTot[3]),'NP','container2');\r\n////                           //wydajnośc SMT chart\r\n      columnChart($filter(\"getArrayNumbers\")($scope.prodData.efficiency),$filter(\"getArrayNumbers\")($scope.prodData.target),$scope.hour,'container');\r\n//////                           //planned stops chart\r\n     columnCharPP($filter(\"getEff\")($scope.ppTot),[],$filter(\"getNames\")($scope.pp),'container10');\r\n////                           //unplaned stops chart\r\n     columnCharPP($filter(\"getEff\")($scope.npTot),[],$filter(\"getNames\")($scope.np),'container11');\r\n  };\r\n      }]);\r\n","angular.module('myApp.controllers').\r\ncontroller(\"loginController\", ['$scope','$location','$rootScope', 'SecurityService','messages',\r\n function($scope, $location, $rootScope, SecurityService, messages) {\r\n\r\n$scope.login = function(user) {\r\n  console.log(\"user:\"+user.username+' password:'+user.password);\r\n  SecurityService.login(user, function(userCallback) {\r\n    console.log(\"usuario:\"+JSON.stringify(userCallback));\r\n    if(userCallback === \"Unauthorized\") {\r\n      messages(userCallback);\r\n      $scope.user.username = \"\";\r\n      $scope.user.password = \"\";\r\n    } else {\r\n      $location.url('/daily');\r\n    }\r\n\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n}]);\r\n","angular.module(\"myApp.controllers\")\r\n        .controller(\"monthlyController\",[\"$scope\",function($scope) {\r\n\r\n\r\n}]);\r\n","angular.module('myApp.controllers').\r\ncontroller('NavCtrl', ['$scope','$location','SecurityService', function($scope, $location, SecurityService) {\r\n\r\n$scope.logout = function() {\r\n      SecurityService.logout(function(response) {\r\n        console.log(\"Logout!\");\r\n        $location.url('/');\r\n      });\r\n}\r\n\r\n\r\n}]);\r\n","var app=angular.module(\"myApp.controllers\")\r\n        .controller(\"weeklyController\",[\"$scope\", \"$filter\", \"$timeout\", \"columnChart\",\r\n    \"pieChart\",\"columnCharPP\", \"weeklyProductForPeriod\", \"weeklyRecordForPeriod\",\r\n    function($scope, $filter, $timeout, columnChart, pieChart, columnCharPP, weeklyProductForPeriod,\r\n    weeklyRecordForPeriod) {\r\n\r\n    $scope.day = [\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"];\r\n\r\n                function arrangeRecords(arr) {\r\n                   var days = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\r\n                   var arr2=[];\r\n                   var exists;\r\n                   var index1;\r\n\r\n                     if (arr.length) {\r\n                        arr2[0] = {\r\n                           name:arr[0].name,\r\n                           text:arr[0].text,\r\n                           calweek:moment(arr[0].dateOfProd, \"YYYY-MM-DD\").isoWeek(),\r\n                           values:[0,0,0,0,0,0,0],\r\n                           details:arr[0].details\r\n                   };\r\n                        arr2[0].values[$filter(\"convertDayInNumber\")(arr[0].dateOfProd,days)] =  parseInt(arr[0].value);\r\n                       for (var i = 1; i < arr.length; i++) {\r\n                           exists=true;\r\n                           var j=0;\r\n                          for (j = 0; j < arr2.length; j++) {\r\n                              if (arr2[j].text === arr[i].text) {\r\n                                  exists = exists * false;\r\n                                      index1=j;\r\n                              } if (arr2[j].text !== arr[i].text) {\r\n                                  exists = exists * true;\r\n                                  index1 = j;\r\n                              }\r\n                          }\r\n                          if (!exists) {\r\n                          arr2[index1].values[$filter(\"convertDayInNumber\")(arr[i].dateOfProd,days)] = parseInt(arr[i].value);\r\n                          } if (exists) {\r\n                                arr2[index1+1] = {\r\n                                    name:arr[i].name,\r\n                                    text:arr[i].text,\r\n                                    calweek:moment(arr[i].dateOfProd, \"YYYY-MM-DD\").isoWeek(),\r\n                                    values:[0,0,0,0,0,0,0],\r\n                                    details:arr[i].details\r\n                                };\r\n                               arr2[index1+1].values[$filter(\"convertDayInNumber\")(arr[i].dateOfProd,days)] = parseInt(arr[i].value);\r\n                          }\r\n                       }\r\n                       return arr2;\r\n                   } else {\r\n                       return [];\r\n                   }\r\n                   }\r\n\r\n                function arrangeProducts(arr) {\r\n                   var days = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\r\n                       var arr2=[];\r\n                       var exists;\r\n                       var index1;\r\n                       if(arr.length) {\r\n                       arr2[0] = {\r\n                           productIndex:arr[0].productIndex,\r\n                           pcbs100:arr[0].pcbs100,\r\n                           calweek:moment(arr[0].prodData, \"YYYY-MM-DD\").isoWeek(),\r\n                           pcbsonpanel:arr[0].pcbsonpanel,\r\n                           description:arr[0].description,\r\n                           productId:arr[0].productId,\r\n                           weeklyQuantity:[0,0,0,0,0,0,0]\r\n                   };\r\n                         arr2[0].weeklyQuantity[$filter(\"convertDayInNumber\")(arr[0].prodData, days)]\r\n                          = parseInt(arr[0].dailyQuantity);\r\n\r\n                       for (var i = 1; i < arr.length; i++) {\r\n                           exists=true;\r\n                           var j=0;\r\n                          for (j = 0; j < arr2.length; j++) {\r\n                              if (arr2[j].productIndex === arr[i].productIndex) {\r\n                                  exists = exists * false;\r\n                                      index1=j;\r\n                              } if (arr2[j].productIndex !== arr[i].productIndex) {\r\n                                  exists = exists * true;\r\n                                  index1 = j;\r\n                              }\r\n                          }\r\n                          if (!exists) {\r\n                            arr2[index1].weeklyQuantity[$filter(\"convertDayInNumber\")\r\n                            (arr[i].prodData, days)] +=\r\n                                    parseInt(arr[i].dailyQuantity);\r\n                          } if (exists) {\r\n                                arr2[index1+1] = {\r\n                                   productIndex:arr[i].productIndex,\r\n                                   pcbs100:arr[i].pcbs100,\r\n                                   calweek:moment(arr[i].prodData, \"YYYY-MM-DD\").isoWeek(),\r\n                                   pcbsonpanel:arr[i].pcbsonpanel,\r\n                                   description:arr[i].description,\r\n                                   idProduct:arr[i].idProduct,\r\n                                   weeklyQuantity:[0,0,0,0,0,0,0]\r\n                                };\r\n                               arr2[index1+1].weeklyQuantity[$filter(\"convertDayInNumber\")\r\n                               (arr[i].prodData, days)] = parseInt(arr[i].dailyQuantity);\r\n                          }\r\n                       }\r\n                       return arr2;\r\n                   } else {\r\n                       return [];\r\n                   }\r\n                 };\r\n\r\n        //----------------------function when button is clicked------------------------------------//\r\n        var getProducts = function() {\r\n            weeklyProductForPeriod.query({date1:$scope.date, date2:$scope.secDate}).$promise.then(function(data){\r\n                $scope.productsWeekly = arrangeProducts(data);\r\n                console.log(\"weeeeeeeeeklyProducts:\"+JSON.stringify($scope.productsWeekly));\r\n            });\r\n        };\r\n//\r\n        var getRecords = function() {\r\n            var k = 0;\r\n            var j = 0;\r\n            var l = 0;\r\n            var pp = [];\r\n            var np = [];\r\n            var prodData = [];\r\n            weeklyRecordForPeriod.query({date1:$scope.date,date2:$scope.secDate}).$promise.then(function(data) {\r\n              console.log(\"datafor weekly record for period:\"+JSON.stringify(data));\r\n                for (var i = 0; i < data.length; i++) {\r\n                    if (data[i].name.split(\".\")[0] === \"prodDataTot\") {\r\n                        prodData[j] = data[i];\r\n                        j=j+1;\r\n                    }\r\n                    if(data[i].name.split(\".\")[0] === \"ppTot\") {\r\n                        pp[k] = data[i];\r\n                        k=k+1;\r\n                    }\r\n                    if (data[i].name.split(\".\")[0] === \"npTot\") {\r\n                        np[l] = data[i];\r\n                        l=l+1;\r\n                    }\r\n                }\r\n\r\n            $scope.prodDataWeekly = arrangeRecords(prodData);\r\n            $scope.ppTotWeekly = arrangeRecords(pp);\r\n            $scope.npTotWeekly = arrangeRecords(np);\r\n\r\n\r\n            });\r\n        };\r\n\r\n//         //--------------click button Show------------------------//\r\n\r\n    $scope.showDataForPeriod = function() {\r\n        var eff=[];\r\n        var lo;\r\n        var lc;\r\n        var leff;\r\n        var npstops;\r\n            getProducts();\r\n            getRecords();\r\n            $timeout(function() {\r\n                $scope.prodDataWeeklyTot = $filter(\"calcWeeklyRecordsTot\")($scope.prodDataWeekly);\r\n                $scope.ppTotWeeklyTot = $filter(\"calcWeeklyRecordsTot\")($scope.ppTotWeekly);\r\n                $scope.npTotWeeklyTot = $filter(\"calcWeeklyRecordsTot\")($scope.npTotWeekly);\r\n                $scope.productsWeeklyTot = $filter(\"calcWeeklyProductsTot\")($scope.productsWeekly);\r\n                console.log(\"$scope.npTotWeeklyTot:\"+$scope.npTotWeeklyTot);\r\n\r\n                  console.log(\"$scope.ppTotWeeklyTot:\"+JSON.stringify($scope.ppTotWeeklyTot));\r\n                    for(var i = 0; i < $scope.ppTotWeeklyTot.length; i++) {\r\n                        $scope.ppTotWeeklyTot[i].values[1] = $filter(\"calcStopsPercent\")($scope.prodDataWeekly,$scope.ppTotWeekly,\r\n                        \"prodDataTot.lineClosedTot\", $scope.ppTotWeeklyTot[i].name);\r\n                    }\r\n                    for(i = 0; i < $scope.npTotWeeklyTot.length; i++) {\r\n                        $scope.npTotWeeklyTot[i].values[1] = $filter(\"calcStopsPercent\")($scope.prodDataWeekly,$scope.npTotWeekly,\r\n                        \"prodDataTot.npStopsTot\", $scope.npTotWeeklyTot[i].name);\r\n                    }\r\n                    for(i = 0; i < $scope.prodDataWeeklyTot.length; i++) {\r\n                        if($scope.prodDataWeeklyTot[i].name === \"prodDataTot.efficiencyTot\") {\r\n                           $scope.prodDataWeeklyTot[i].values[0] = $filter(\"calcWeeklyEff\")($scope.prodDataWeekly);\r\n                        }\r\n                        if($scope.prodDataWeeklyTot[i].name === \"prodDataTot.lineClosedTot\") {\r\n                           $scope.prodDataWeeklyTot[i].values[1] = $filter(\"calcWeeklyClosed\")($scope.prodDataWeeklyTot);\r\n                           lc = parseInt($scope.prodDataWeeklyTot[i].values[1]);\r\n                        }\r\n\r\n                        if($scope.prodDataWeeklyTot[i].name === \"prodDataTot.lineOpenedTot\") {\r\n                           $scope.prodDataWeeklyTot[i].values[1] = $filter(\"calcWeeklyLineOpened\")($scope.prodDataWeeklyTot);\r\n                           lo = parseInt($scope.prodDataWeeklyTot[i].values[1]);\r\n                        }\r\n                        if($scope.prodDataWeeklyTot[i].name === \"prodDataTot.npStopsTot\") {\r\n                           $scope.prodDataWeeklyTot[i].values[1] = $filter(\"calcWeeklynpStops\")($scope.prodDataWeeklyTot);\r\n                           npstops = parseInt($scope.prodDataWeeklyTot[i].values[1]);\r\n                        }\r\n                        if($scope.prodDataWeeklyTot[i].name === \"prodDataTot.lineEffTot\") {\r\n                           $scope.prodDataWeeklyTot[i].values[1] = $filter(\"calcWeeklyLineEff\")($scope.prodDataWeeklyTot);\r\n                           leff = parseInt($scope.prodDataWeeklyTot[i].values[1]);\r\n                        }\r\n                    }\r\n                            //planed stops chart\r\n                pieChart(lo,'Lotw.',lc,'PP','container3');\r\n                           //unplaned stops chart\r\n                pieChart(leff,'Leff.',npstops,'NP','container4');\r\n//                           //wydajnośc SMT chart\r\n                columnChart($filter(\"getWeeklyEff\")($scope.prodDataWeekly),[80,80,80,80,80,80,80],$scope.day,'container');\r\n////                           //planned stops chart\r\n                columnCharPP($filter(\"getStops\")($scope.ppTotWeeklyTot),[],$filter(\"getNamesFromArray\")($scope.ppTotWeeklyTot),'container5');\r\n//                           //unplaned stops chart\r\n                columnCharPP($filter(\"getStops\")($scope.npTotWeeklyTot),[],$filter(\"getNamesFromArray\")($scope.npTotWeeklyTot),'container6');\r\n\r\n            }, 1500);\r\n\r\n    };\r\n}]);\r\n","angular.module(\"myApp.controllers\")\r\n        .controller(\"yearlyController\",[\"$scope\",function($scope) {\r\n\r\n}]);\r\n","angular.module(\"myApp.directives\",[]).\r\n    directive(\"pkListen\",[\"$timeout\", \"$filter\", \"$rootScope\", \"pieChart\", \"columnChart\",\r\n    \"dailyProduct\", \"dailyProductService\", \"columnCharPP\",\r\n    \"dailyProductByDate\", \"_\",\r\n        function($timeout, $filter, $rootScope, pieChart, columnChart, dailyProduct,\r\n           dailyProductService, columnCharPP, dailyProductByDate, _ ){\r\n        return {\r\n          restrict:\"A\",\r\n\r\n          link:function(scope, elem, attr) {\r\n              var activeElement;\r\n              var klasa;\r\n              var obj;\r\n              var productId;\r\n              var cellNr;\r\n\r\n                  elem.on(\"click\", function() {\r\n                      elem[0].select();\r\n                  });\r\n\r\n              elem.on(\"keydown keypress change\", function(event) {\r\n                      activeElement = document.activeElement;\r\n                      if(event.which === 13) {\r\n                            activeElement.blur();\r\n                  }\r\n              });\r\n             elem.on(\"blur\", function() {\r\n                 klasa = (attr.class).split(\" \")[1];\r\n                 obj = (attr.class).split(\" \")[0];\r\n                 if (!isNaN(parseInt(elem.val())) && elem.val() !== \"\") {\r\n                        if ($filter(\"checkForNumbers\")(attr.class, parseInt(attr.id), parseInt(elem.val()))) {\r\n                          var dailyRec = {\r\n                              recordId:attr.id+klasa,\r\n                              name:attr.class,\r\n                              index:attr.id,\r\n                              value:elem.val(),\r\n                              details:\"\",\r\n                              prodData:scope.productionDate\r\n                          };\r\n                          console.log(\"dailyRec:\"+JSON.stringify(dailyRec));\r\n                         scope.addDailyRecord(dailyRec);\r\n                            scope.$eval(obj+\".\"+klasa)[attr.id] = elem.val();\r\n                            $filter('calcStops')(scope.prodData.lineClosed, scope.pp);\r\n                            $filter('calcStops')(scope.prodData.npStops, scope.np);\r\n                            scope.prodData.lineOpened=$filter(\"getLineOpened\")(scope.prodData.lineClosed);\r\n                            scope.prodData.efficiency=$filter(\"calcEffArr\")(scope.products,\r\n                                             scope.prodData.lineOpened,scope.prodData);\r\n                            scope.prodData.lineEff=$filter(\"calcLineEff\")(scope.prodData.efficiency, scope.prodData.lineOpened);\r\n                            $filter('calcTot')(scope.prodData,scope.prodDataTot);\r\n                            $filter('calcTot')(scope.pp, scope.ppTot);\r\n                            $filter('calcTot')(scope.np, scope.npTot);\r\n                            scope.prodDataTot.efficiencyTot[0]=$filter(\"calcAverageEff\")(1,8,scope.prodData.efficiency);\r\n                            scope.prodDataTot.efficiencyTot[1]=$filter(\"calcAverageEff\")(9,16,scope.prodData.efficiency);\r\n                            scope.prodDataTot.efficiencyTot[2]=$filter(\"calcAvgEffTot\")(scope.prodDataTot.efficiencyTot[1],scope.prodDataTot.efficiencyTot[0]);\r\n                            $filter('calcRatioProdData')(scope.prodDataTot);\r\n                            $filter('calcRatio')(scope.npTot, scope.prodDataTot, \"npStopsTot\");\r\n                            $filter('calcRatio')(scope.ppTot, scope.prodDataTot, \"lineClosedTot\");\r\n                           //planed stops chart\r\n                            pieChart(parseInt(scope.prodDataTot.lineOpenedTot[3]),'Lotw.',parseInt(scope.prodDataTot.lineClosedTot[3]),'PP','container1');\r\n                                       //unplaned stops chart\r\n                            pieChart(parseInt(scope.prodDataTot.lineEffTot[3]),'Leff.',parseInt(scope.prodDataTot.npStopsTot[3]),'NP','container2');\r\n            //                           //wydajnośc SMT chart\r\n                            columnChart($filter(\"getArrayNumbers\")(scope.prodData.efficiency),$filter(\"getArrayNumbers\")(scope.prodData.target),scope.hour,'container');\r\n            ////                           //planned stops chart\r\n                            columnCharPP($filter(\"getEff\")(scope.ppTot),[],$filter(\"getNames\")(scope.pp),'container10');\r\n            //                           //unplaned stops chart\r\n                            columnCharPP($filter(\"getEff\")(scope.npTot),[],$filter(\"getNames\")(scope.np),'container11');\r\n\r\n                            ///record dailyQuantity to products_daily\r\n\r\n                    if(attr.class.indexOf(\"product\") !== -1) {\r\n                        var productNr;\r\n                        dailyProductByDate.query({\"prodData\":scope.productionDate}).$promise.then(function(data) {\r\n                            for (var i =0; i < data.length; i++) {\r\n                              productNr = parseInt(data[i].productId.substring(0,1));\r\n                                 if(scope.$eval(\"prodDataTot.\"+\"product\"+(productNr+1)+\"Tot\")[2] !== 0) {\r\n                                     data[i].dailyQuantity = scope.$eval(\"prodDataTot.\"+\"product\"+(productNr+1)+\"Tot\")[2];\r\n                                        dailyProductService.update({id:data[i]._id}, data[i]).$promise.then(function(success) {\r\n                                     });\r\n                                 }\r\n                             }\r\n                                 });\r\n                             }\r\n                           }\r\n                         }\r\n\r\n                           if(!($filter(\"checkForNumbers\")(attr.class, attr.id, elem.val()))) {\r\n                             if (elem.val() !== \"\") {\r\n                             scope.$eval(obj+\".\"+klasa)[1] = elem.val();\r\n                             console.log(\"elem.vaaaaaaal()\"+elem.val());\r\n                             var dailyRec = {\r\n                                 recordId:attr.id+klasa,\r\n                                 name:attr.class,\r\n                                 index:attr.id,\r\n                                 value:\"\",\r\n                                 details:elem.val(),\r\n                                 prodData:scope.productionDate\r\n                             };\r\n                              scope.addDailyRecord(dailyRec);\r\n                           }\r\n                         }\r\n            });\r\n          }\r\n        };\r\n}]).\r\n\r\n    directive(\"pkListenProduct\", [\"dailyProduct\" ,\"products\",function(dailyProduct, products) {\r\n        return {\r\n            restrict:\"A\",\r\n            link:function(scope,elem,attr) {\r\n              var product={};\r\n                elem.on(\"keydown keypress change\", function(event) {\r\n                      activeElement = document.activeElement;\r\n                      if(event.which === 13) {\r\n                            activeElement.blur();\r\n                  }\r\n              });\r\n                var activeElem;\r\n                elem.on(\"blur\",function(e) {\r\n                     activeElem=document.activeElement;\r\n                        console.log(\"attr.id:\"+attr.id);\r\n                        products.get({productIndex:elem.val()}).$promise.then(function(data) {\r\n                          console.log(\"products:\"+JSON.stringify(data));\r\n                            product._id = \"\";\r\n                            product.productId = attr.id + scope.productionDate;\r\n                            product.productIndex = data.productIndex;\r\n                            product.description = data.description;\r\n                            product.pcbsonpanel = data.pcbsonpanel;\r\n                            product.pcbs100 = data.pcbs100;\r\n                            product.prodData = scope.productionDate;\r\n                            product.dailyQuantity = \"\";\r\n                            scope.saveShowProductsDaily(product);\r\n                            });\r\n                });\r\n\r\n            }\r\n\r\n        };\r\n\r\n}]).\r\n    directive(\"pkLeave\", [\"$timeout\", \"$filter\",function($timeout, $filter, addDays) {\r\n        return {\r\n            restrict:\"A\",\r\n            link:function(scope,elem,attr) {\r\n                elem.on(\"blur\", function() {\r\n                    $timeout(function() {\r\n                    console.log(\"elem.val:\"+elem.val());\r\n                    console.log(\"date in directive:\"+scope.date);\r\n                    scope.secDate = $filter(\"addDays\")(scope.date, 6);\r\n                  }, 1500);\r\n\r\n                });\r\n            }\r\n        };\r\n}]).\r\n        directive(\"scrollup\",[\"$document\", function($document) {\r\n            return {\r\n                restrict:\"A\",\r\n                link: function(scope, elem, attrs) {\r\n                    elem.on(\"click\", function() {\r\n\r\n                        function scrollToTop(element, to, duration) {\r\n                            if (duration<0) return;\r\n\r\n                            var difference=to-element.scrollTop;\r\n                            var perTick=difference/duration * 10;\r\n\r\n                              // console.log(\"difference:\"+difference);\r\n                              // console.log(\"perTick:\"+perTick);\r\n\r\n                            setTimeout(function() {\r\n                               element.scrollTop=element.scrollTop+perTick;\r\n                               scrollToTop(element,to,duration-10);\r\n                            },10);\r\n                        }\r\n                        scrollToTop($document[0].body, 0, 500);\r\n                    });\r\n                }\r\n            };\r\n}]);\r\n","angular.module(\"myApp.filters\", []).\r\n        filter(\"getArrayNumbers\", function() {\r\n            return function(arr) {\r\n         var arr1=[];\r\n    for (var i=1; i<arr.length;i++) {\r\n        arr1.push(arr[i]);\r\n    }\r\n    return arr1;\r\n\r\n            };\r\n}).\r\n        filter(\"lineRatio\", function() {\r\n            return function(val1,val2){\r\n                if(val1!==0) {\r\n                   return (100*val1/(val1+val2)).toFixed(0);\r\n                } else {\r\n                    return 0;\r\n                }\r\n            };\r\n\r\n\r\n        }).\r\n                filter(\"getSumTot\", function() {\r\n                    return function(fIndex,arr) {\r\n                        var total=0;\r\n                        for(var i=fIndex;i<arr.length;i++) {\r\n                        total+=parseInt(arr[i]);\r\n                    }\r\n                 return total;\r\n\r\n\r\n                    };\r\n        }).\r\n                filter(\"getAverage\", function() {\r\n                return function(index,arr) {\r\n                    var count=0;\r\n                    var suma=0;\r\n                        for (var i=index;i<arr.length;i++) {\r\n\r\n                            if(arr[i]!==0) {\r\n                                count+=1;\r\n                                suma+=arr[i];\r\n                            }\r\n                        }\r\n                        if (count!==0) {\r\n                              return suma/count;\r\n                        } else {\r\n                            return 0;\r\n\r\n                    }\r\n                            };\r\n        }).\r\n                filter(\"getSum\", function() {\r\n                    return function(fIndex,lIndex,arr) {\r\n                            var total=0;\r\n                       for(var i=fIndex;i<=lIndex;i++) {\r\n\r\n                           total+=parseInt(arr[i]);\r\n    }\r\n return total;\r\n                    };\r\n        }).\r\n                filter(\"calculateEff\", function() {\r\n                   return function(arr,lo,index,obj) {\r\n                        var total=0;\r\n                        var totalPercent;\r\n                        for (var i = 0; i < arr.length; i++) {\r\n                            if(arr[i] !== null && typeof arr[i] !== 'undefined') {\r\n                                if(!isNaN(arr[i].pcbs100)) {\r\n                                    total+=(60/lo)*(obj[\"product\"+(i+1)][index]/arr[i].pcbs100);\r\n                                }\r\n                            }\r\n                    }\r\n\r\n                        totalPercent=parseInt((total*100).toFixed(0));\r\n                        return totalPercent;\r\n                    };\r\n        }).\r\n\r\n                filter(\"calcEffArr\", function() {\r\n                    return function(arr1,arr2,obj) {\r\n                        var total;\r\n                        var totPercent=[];\r\n                        totPercent[0]=\"eff[%]\";\r\n                        for (var j = 1; j<arr2.length; j++) {\r\n                            total=0;\r\n                            for (var i=0; i <= arr1.length; i++) {\r\n                                if(arr1[i] !== null && typeof arr1[i] !== 'undefined') {\r\n                                if(!isNaN(arr1[i].pcbs100) && arr1[i].pcbs100 !== \"0\" && arr1[i].pcbs100 !== \"undefined\") {\r\n                                    total += arr2[j] !== 0 ? (60/arr2[j])*(obj[\"product\"+(i+1)][j]/arr1[i].pcbs100) : 0;\r\n                                }\r\n                        }\r\n                            }\r\n                             totPercent[j]=parseInt((total*100));\r\n                    }\r\n                    console.log(\"totPercent:\"+totPercent);\r\n                    return totPercent;\r\n                    };\r\n                }).\r\n\r\n\r\n                filter(\"calcAverageEff\",function() {\r\n                  return function(findex,lindex,arr) {\r\n                    var sum=0;\r\n                    var counter=0;\r\n                    for (var i =findex; i<=lindex;i++) {\r\n                //        console.log(arr[i]);\r\n                        if (arr[i]!==0) {\r\n                            sum+=parseInt(arr[i]);\r\n                            counter+=1;\r\n                        }\r\n                    }\r\n                    if (sum!==0 && counter!==0) {\r\n                        return (sum/counter).toFixed(0);\r\n                    } else {\r\n                    return 0;\r\n                }\r\n                };\r\n        }).\r\n\r\n                filter(\"calcAvgEffTot\",function() {\r\n                    return function(el1,el2) {\r\n                            var calc;\r\n                            if (el1*el2!==0) {\r\n                                calc=(((parseInt(el1)+parseInt(el2))/2).toFixed(0));\r\n                            } else {\r\n                                calc=(parseInt(el1)+parseInt(el2));\r\n                            }\r\n\r\n                          return calc;\r\n\r\n                      };\r\n        }).\r\n\r\n        filter(\"findPercent\", function() {\r\n            return function(val1,val2){\r\n                if(val1!==0) {\r\n                   return (100*val1/(val2)).toFixed(0);\r\n                } else {\r\n                    return 0;\r\n                }\r\n            };\r\n\r\n\r\n        }).\r\n                filter(\"getNames\", function() {\r\n                    return function(o) {\r\n                        var names=[];\r\n                        var i = 0;\r\n                        for (var prop in o) {\r\n                            if(o.hasOwnProperty(prop)) {\r\n                                names[i]=[o[prop][0]];\r\n                                i++;\r\n                            }\r\n                        }\r\n                        return names;\r\n                    };\r\n        }).\r\n                          filter(\"getEff\", function() {\r\n                    return function(o) {\r\n                        var names=[];\r\n                        var i = 0;\r\n                        for (var prop in o) {\r\n                            if(o.hasOwnProperty(prop)) {\r\n                                names[i]=parseInt([o[prop][3]]);\r\n                                i++;\r\n                            }\r\n                        }\r\n                        return names;\r\n                    };\r\n        }).\r\n                filter(\"getLineOpened\", function() {\r\n                    return function(arr) {\r\n                        var arr2=[];\r\n                        arr2[0]=\"Lin.Otwarta[min]\";\r\n                        for(var i=1; i< arr.length; i++) {\r\n                            arr2[i] = 60 - arr[i];\r\n                        }\r\n                        return arr2;\r\n                    };\r\n        }).\r\n                filter(\"calcLineEff\", function() {\r\n                    return function(arr1,arr2) {\r\n                        var arr3=[];\r\n                        arr3[0]=\"Lin.Eff.[min]\";\r\n                        for (var i=1; i<arr1.length; i++) {\r\n                            arr3[i]=(arr1[i]*arr2[i]/100).toFixed(0);\r\n                        }\r\n                        return arr3;\r\n                    };\r\n        }).\r\n                filter(\"getAllNames\", function() {\r\n                    return function(obj1,obj1str, obj2, obj2str, obj3,obj3str) {\r\n                        var arr=[];\r\n                        for (var p in obj1) {\r\n                                arr.push(obj1str+p);\r\n                            }\r\n                            for (p in obj2) {\r\n                                arr.push(obj2str+p);\r\n                            }\r\n                            for (p in obj3) {\r\n                                arr.push(obj3str+p);\r\n                            }\r\n                            return arr;\r\n                                            };\r\n        }).\r\n                  filter(\"convertDayInNumber\", function() {\r\n                return function(datum,arr) {\r\n                    var dt=moment(datum);\r\n                    var index;\r\n                    for (var i=0;i<arr.length;i++) {\r\n                        if(arr[i] === dt.format('dddd')) {\r\n                            index=i;\r\n                        }\r\n                    }\r\n                    return index;\r\n        };\r\n                 }).\r\n        filter(\"calcWeeklyRecordsTot\", function() {\r\n            return function(arr) {\r\n                var arr2=[];\r\n                var num=0;\r\n                for(var i = 0; i < arr.length; i++) {\r\n                    if(arr[i].name !== \"lineEffTot\") {\r\n                        arr2[i] = {\r\n                            name:arr[i].name,\r\n                            text:arr[i].text,\r\n                            calweek:arr[i].calweek,\r\n                            values:[arr[i].values.reduce(function(a,b){return parseInt(a)+parseInt(b);}),0] /* jshint loopfunc:true */\r\n                        };\r\n                    } if (arr[i].name === \"lineEffTot\") {\r\n                        for(var j = 0; j < arr[i].values.length;i++) {\r\n                            if(arr[i].values[j] !== 0) {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n                        arr2[i] = {\r\n                            name:arr[i].name,\r\n                            text:arr[i].text,\r\n                            calweek:arr[i].calweek,\r\n                            values:[arr[i].values.reduce(function(a,b){return (parseInt(a)+parseInt(b))/num;}),0]\r\n                        };\r\n                    }\r\n            }\r\n            return arr2;\r\n        };\r\n                 }).\r\n\r\n        filter(\"calcWeeklyProductsTot\", function() {\r\n            return function(arr) {\r\n                var arr2=[];\r\n                   for (var i = 0; i < arr.length; i++) {\r\n                        arr2[i] = {\r\n                            productIndex:arr[i].productIndex,\r\n                            calmonth:arr[i].calweek,\r\n                            monthlyQuantity:[arr[i].weeklyQuantity.reduce(function(a,b){return parseInt(a)+parseInt(b);}),0] /* jshint loopfunc:true */\r\n                        };\r\n            }\r\n            return arr2;\r\n        };\r\n                 }).\r\n\r\n        filter(\"calcAvgEffWeeklyTot\",function() {\r\n                    return function(arr) {\r\n                        var calc;\r\n                        var num=0;\r\n                        for(var i =0; i < arr.length; i++) {\r\n                            if (arr[i]!==0) {\r\n                                num+=num;\r\n                            }\r\n                        }\r\n                            calc = arr.reduce(function(a,b,num){ return (parseInt(a)+parseInt(b))/num;});\r\n                          return calc;\r\n                      };\r\n        }).\r\n\r\n        filter(\"calcStopsPercent\", function() {\r\n            return function(arr1,arr2,text,name) {\r\n                var sum=0;\r\n                var num=0;\r\n                for(var i = 0; i < arr1.length; i++) {\r\n                    if(arr1[i].name === text) {\r\n                        num = parseInt(arr1[i].values.reduce(function(a,b){ return a+b; }));\r\n                    }\r\n                }\r\n                for(var j = 0; j < arr2.length; j++) {\r\n                         console.log(\"num:\"+num);\r\n                         console.log(\"name:\"+name);\r\n                      if(arr2[j].name === name) {\r\n                    sum = arr2[j].values.reduce(function(a,b){ return a+b; });\r\n                    if(num !== 0) {\r\n                        console.log(\"sum:\"+sum);\r\n                       return (100*sum/num).toFixed(0);\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n                  }\r\n                  }\r\n            };\r\n        }).\r\n        filter(\"calcWeeklyEff\", function() {\r\n            return function(arr) {\r\n                var num = 0;\r\n                var sum = 0;\r\n               for(var i = 0; i < arr.length; i++) {\r\n                  if(arr[i].name === \"prodDataTot.efficiencyTot\") {\r\n                      for (var j = 0; j < arr[i].values.length; j++) {\r\n                          if (arr[i].values[j] !== 0) {\r\n                              num += 1;\r\n                          }\r\n                      }\r\n                      sum = arr[i].values.reduce(function(a,b){return parseInt(a)+parseInt(b);}); /* jshint loopfunc:true */\r\n                  }\r\n                    }\r\n                    if(num !== 0) {\r\n                return (sum/num).toFixed(0);\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n            };\r\n        }).\r\n        filter(\"calcWeeklyClosed\", function() {\r\n           return function(arr) {\r\n               var lc = 0;\r\n               var lo = 0;\r\n               for(var i = 0; i < arr.length; i++) {\r\n                  if(arr[i].name === \"prodDataTot.lineClosedTot\") {\r\n                      lc = arr[i].values[0];\r\n                  }\r\n                  if(arr[i].name === \"prodDataTot.lineOpenedTot\") {\r\n                      lo = arr[i].values[0];\r\n                  }\r\n              }\r\n              if(lo !== 0) {\r\n                  return (100*lc/(lo+lc)).toFixed(0);\r\n              } else {\r\n                  return 0;\r\n              }\r\n\r\n           };\r\n        }).\r\n                filter(\"calcWeeklyLineOpened\", function() {\r\n           return function(arr) {\r\n               var lc = 0;\r\n               var lo = 0;\r\n               for(var i = 0; i < arr.length; i++) {\r\n                  if(arr[i].name === \"prodDataTot.lineOpenedTot\") {\r\n                      lo = parseInt(arr[i].values[0]);\r\n                  }\r\n                  if(arr[i].name === \"prodDataTot.lineClosedTot\") {\r\n                      lc = parseInt(arr[i].values[0]);\r\n                  }\r\n              }\r\n              if(lc !== 0) {\r\n                  return (100*lo/(lo+lc)).toFixed(0);\r\n              } else {\r\n                  return 0;\r\n              }\r\n\r\n           };\r\n        }).\r\n\r\n        filter(\"calcWeeklynpStops\", function() {\r\n           return function(arr) {\r\n               var np = 0;\r\n               var ef = 0;\r\n               for(var i = 0; i < arr.length; i++) {\r\n                  if(arr[i].name === \"prodDataTot.npStopsTot\") {\r\n                      np = parseInt(arr[i].values[0]);\r\n                  }\r\n                  if(arr[i].name === \"prodDataTot.lineEffTot\") {\r\n                      ef = parseInt(arr[i].values[0]);\r\n                  }\r\n              }\r\n              if(ef !== 0) {\r\n                  return (100*np/(np+ef)).toFixed(0);\r\n              } else {\r\n                  return 0;\r\n              }\r\n\r\n           };\r\n        }).\r\n\r\n         filter(\"calcWeeklyLineEff\", function() {\r\n           return function(arr) {\r\n               var np = 0;\r\n               var ef = 0;\r\n               for(var i = 0; i < arr.length; i++) {\r\n                  if(arr[i].name === \"prodDataTot.lineEffTot\") {\r\n                      ef = parseInt(arr[i].values[0]);\r\n                  }\r\n                  if(arr[i].name === \"prodDataTot.npStopsTot\") {\r\n                      np = parseInt(arr[i].values[0]);\r\n                  }\r\n              }\r\n              if(np !== 0) {\r\n                  return (100*ef/(ef+np)).toFixed(0);\r\n              } else {\r\n                  return 0;\r\n              }\r\n\r\n           };\r\n        }).\r\n       filter(\"getNamesFromArray\", function() {\r\n           var arr2=[];\r\n           return function(arr) {\r\n              for(var i = 0; i < arr.length; i++) {\r\n                  arr2[i] = arr[i].text;\r\n              }\r\n              return arr2;\r\n           };\r\n        }).\r\n        filter(\"getStops\", function() {\r\n           var arr2=[];\r\n           return function(arr) {\r\n              for(var i = 0; i < arr.length; i++) {\r\n                  arr2[i] = parseInt(arr[i].values[1]);\r\n              }\r\n              return arr2;\r\n           };\r\n        }).\r\n        filter(\"getWeeklyEff\", function() {\r\n            var arr2=[];\r\n            return function(arr) {\r\n                for(var i =0; i < arr.length; i++) {\r\n                    if(arr[i].name === \"prodDataTot.efficiencyTot\") {\r\n                        for(var j = 0; j < arr[i].values.length; j++) {\r\n                            arr2[j] = parseInt(arr[i].values[j]);\r\n                        }\r\n                    }\r\n                }\r\n                return arr2;\r\n            };\r\n        }).\r\n        filter(\"findId\", function() {\r\n          return function(id, arr) {\r\n            var exist = false;\r\n            arr.filter(function(i, item) {\r\n              if (i._id === id) {\r\n                exist = true;\r\n              }\r\n            });\r\n            return exist;\r\n          }\r\n\r\n        }).\r\n        filter(\"calcStops\", function() {\r\n            return function(arr, o) {\r\n                for(var i = 1; i < arr.length; i++) {\r\n                    arr[i]=0;\r\n                    for(var property in o) {\r\n                        if(o.hasOwnProperty(property)) {\r\n                            arr[i]+=parseInt(o[property][i+1]);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }).\r\n        filter(\"calcTot\", function() {\r\n           return function(o1,o2) {\r\n               for(var i =1; i <= 8; i++) {\r\n                   for(var property in o1) {\r\n                        if(o1.hasOwnProperty(property)) {\r\n                            if(property !== \"efficiency\" && property !== \"target\") {\r\n                          o2[property+\"Tot\"][0] = o1[property].filter(function(i, item, value) { /* jshint loopfunc:true */\r\n                             if(!isNaN(value[item]) && value[item] !== \"\") {\r\n                                 return true;\r\n                                 }\r\n                          }).filter(function(i,item) {\r\n                              if(item >= 0 && item <= 7) {\r\n                              return true;\r\n                          }\r\n                    }).reduce(function(a,b) { /* jshint loopfunc:true */\r\n                            return parseInt(a)+parseInt(b);\r\n                          });\r\n                          }\r\n                        }\r\n               }\r\n\r\n         }\r\n            for (i=9;i <= 16; i++) {\r\n                   for(var property in o1) {\r\n                        if(o1.hasOwnProperty(property)) {\r\n                            if(property !== \"efficiency\" && property !== \"target\") {\r\n                          o2[property+\"Tot\"][1] = o1[property].filter(function(i,item,value) { /* jshint loopfunc:true */\r\n                             if(!isNaN(value[item]) && value[item]!==\"\") {\r\n                                 return true;\r\n                                 }\r\n                             })\r\n                              .filter(function(i,item) {\r\n                              if(item >= 8 && item <= 16 ) {\r\n                              return true;\r\n                            }\r\n                    }).reduce(function(a,b) { /* jshint loopfunc:true */\r\n                            return parseInt(a)+parseInt(b);\r\n                          });\r\n                          o2[property+\"Tot\"][2]=o2[property+\"Tot\"][0]+o2[property+\"Tot\"][1];\r\n                          }\r\n                      }\r\n               }\r\n         }\r\n           };\r\n\r\n        }).\r\n        filter(\"calcRatioProdData\", function($filter) {\r\n            return function(o) {\r\n                o.lineEffTot[3]=o.efficiencyTot[2];\r\n                o.lineOpenedTot[3]=$filter(\"lineRatio\")(o.lineOpenedTot[2],o.lineClosedTot[2]);\r\n                o.lineClosedTot[3]=$filter(\"lineRatio\")(o.lineClosedTot[2],o.lineOpenedTot[2]);\r\n                o.npStopsTot[3]=$filter(\"lineRatio\")(o.npStopsTot[2],o.lineEffTot[2]);\r\n            };\r\n        }).\r\n        filter(\"calcRatio\", function() {\r\n          return function(o1,o2,text) {\r\n              for(var property in o1) {\r\n                  if(o1.hasOwnProperty(property)) {\r\n                      if (o2[text][2] !== 0) {\r\n                      o1[property][3]=(100*o1[property][2]/o2[text][2]).toFixed(0);\r\n                  } else {\r\n                      o1[property][3]=0;\r\n                  }\r\n                  }\r\n              }\r\n          };\r\n      }).\r\n      filter(\"addDays\", function() {\r\n          return function(date,days) {\r\n            var result = moment(date,'YYYY-MM-DD').add(days,'days').format(\"YYYY-MM-DD\");\r\n              if (date === \"undefined\") {\r\n                return \"\";\r\n                  } else {\r\n                    return result;\r\n                  }\r\n          };\r\n        }).\r\n        filter('checkForNumbers', function() {\r\n            return function(klasa, id, val) {\r\n              var obj = (klasa).split(\" \")[0] + id;\r\n              if (obj !== \"pp1\" && obj !== \"np1\") {\r\n                return true;\r\n              }\r\n              if ((obj === \"pp1\" || obj === \"np1\")) {\r\n                return false;\r\n              }\r\n            }\r\n        }).\r\n        filter('sorter', function() {\r\n          return function(xval, yval, r) {\r\n            // console.log('xval:'+xval);\r\n            //   console.log('yval:'+yval);\r\n            var x = [];\r\n            var xsorted = [];\r\n            var y = [];\r\n            var ysorted = [];\r\n            var xo = {};\r\n            var yo = {};\r\n            for (var i = 0; i <= yval.length; i++) {\r\n              yo = {\r\n                [i]:yval[i],\r\n              }\r\n              y.push(yo);\r\n            }\r\n            for (var i = 0; i <= xval.length; i++) {\r\n              xo = {\r\n                xval:xval[i],\r\n                number:i\r\n              }\r\n              x.push(xo);\r\n            }\r\n            console.log('x:'+JSON.stringify(x));\r\n            console.log('y:'+JSON.stringify(y));\r\n              xsorted = x.sort(function(a,b) {\r\n                return b.xval-a.xval;\r\n              });\r\n            console.log('xsorted:'+JSON.stringify(xsorted));\r\n            for (var i = 0; i <= y.length; i++) {\r\n              console.log('x:'+JSON.stringify(xsorted[i].number));\r\n              // console.log('y:'+JSON.stringify(y[xsorted[i][\"number\"])));\r\n            }\r\n          }\r\n          return null;\r\n        });\r\n","var services=angular.module(\"myApp.services\",[\"ngResource\"]);\r\n  var localhost = \"localhost:\";\r\n         services.factory('products', function($resource) {\r\n           return $resource(\"http://\"+localhost+\"3000/products/:productIndex\", {} , {\r\n               get:{method:'GET', params:{productIndex:'@productIndex'}, isArray:false}\r\n\r\n           });\r\n           });\r\n\r\n           services.factory(\"productService\", function($resource) {\r\n            return $resource(\"http://\"+localhost+\"3000/products/:id\", {}, {\r\n                 update:{method:\"PUT\", params:{id:'@id'}},\r\n                 delete:{method:'DELETE', params:{id:\"@id\"}}\r\n            });\r\n                  });\r\n\r\n          services.factory(\"productsByOpis\", function($resource) {\r\n           return $resource(\"http://\"+localhost+\"3000/products/description/:description\", {}, {\r\n                query:{method:\"GET\", params:{description:\"@description\"}, isArray:true}\r\n           });\r\n                 });\r\n\r\n           services.factory(\"dailyRecord\", function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyrecords/:recordId\",{}, {\r\n                  get:{method:'GET', params:{recordId:'@recordId'}, isArray:false}\r\n               });\r\n           });\r\n\r\n           services.factory(\"dailyRecordByDate\", function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyrecords/bydate/:prodData\",{}, {\r\n                  query:{method:'GET', params:{prodData:'@prodData'}, isArray:true}\r\n               });\r\n           });\r\n\r\n           services.factory(\"dailyRecordService\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyrecords/:recordId\",{}, {\r\n                   update: {method:\"PUT\",params:{recordId:\"@recordId\"}},\r\n\r\n               });\r\n           });\r\n\r\n           services.factory(\"dailyRecordServiceDel\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyrecords/:id\",{}, {\r\n                   delete: {method:\"DELETE\", params:{id:\"@id\"}}\r\n\r\n               });\r\n           });\r\n\r\n\r\n           services.factory(\"dailyProduct\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyproducts/:productIndex\",{}, {\r\n                   get:{method:\"GET\", params:{productIndex:\"@productIndex\"}, isArray:false},\r\n               });\r\n           });\r\n\r\n           services.factory(\"dailyProductByDate\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyproducts/bydate/:prodData\",{}, {\r\n                   update:{method:\"GET\", params:{prodData:\"@prodData\"}, isArray:true},\r\n               });\r\n           });\r\n\r\n           services.factory(\"dailyProductService\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/dailyproducts/:id\",{}, {\r\n                   update: {method:\"PUT\",params:{id:\"@id\"}},\r\n                   delete:{method:'DELETE', params:{id:\"@id\"}}\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyRecord\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyrecords/:weeklyRecordId\",{}, {\r\n                   get:{method:\"GET\", params:{weeklyRecordId:\"@weeklyRecordId\"}, isArray:false},                   g:{method:\"GET\", params:{weeklyRecordId:\"@weeklyRecordId\"}, isArray:true},\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyRecordForPeriod\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyrecords/period/:date1/:date2\",{}, {\r\n                   update:{method:\"GET\", params:{date1:\"@date1\", date2:\"@date2\"}, isArray:true},\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyRecordService\", function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyrecords/:id\",{}, {\r\n                   update: {method:\"PUT\",params:{id:\"@id\"}},\r\n                   delete:{method:'DELETE', params:{id:\"@id\"}}\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyProduct\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyproducts/:recordId\",{}, {\r\n                   query:{method:\"GET\", params:{recordId:\"@recordId\"}, isArray:true},\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyProductForData\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyproducts/date/:prodData\",{}, {\r\n                   query:{method:\"GET\", params:{prodData:\"@prodData\"}, isArray:true},\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyProductForPeriod\",function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyproducts/period/:date1/:date2\",{}, {\r\n                   query:{method:\"GET\", params:{date1:\"@date1\", date2:\"@date2\"}, isArray:true},\r\n               });\r\n           });\r\n\r\n           services.factory(\"weeklyProductService\", function($resource) {\r\n               return $resource(\"http://\"+localhost+\"3000/weeklyproducts/:id\",{}, {\r\n                   update: {method:\"PUT\", params:{id:\"@id\"}},\r\n                   delete:{method:'DELETE', params:{id:\"@id\"}}\r\n               });\r\n           });\r\n//\r\n\r\nservices.factory(\"SecurityService\", ['$http','$rootScope','$location','messages',\r\n      function($http, $rootScope, $location, messages) {\r\n        return {\r\n          login : function(user, callback) {\r\n            console.log(\"user in security Service:\"+ JSON.stringify(user));\r\n            $http.post('http://'+localhost+'3000/login', user).success(function(user) {\r\n              $rootScope.currentUser = user;\r\n              callback(user);\r\n            }).\r\n            error(function(error) {\r\n              callback(error);\r\n            });\r\n          },\r\n\r\n          logout : function(callback) {\r\n            $http.post('http://'+localhost+'3000/logout').success(function() {\r\n              $rootScope.currentUser = null;\r\n              callback();\r\n               $location.url('/login')\r\n           });\r\n          }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      }]);\r\n\r\n           services.factory(\"columnChart\", function() {\r\n            return function(eff,target,xvalues,container) {\r\n                Highcharts.chart(container, {\r\n            chart: {\r\n                type: 'column',\r\n                options3d: {\r\n\t\tenabled: true,\r\n                alpha: 10,\r\n                beta: 30,\r\n                depth: 40 ,\r\n                borderColor:'#303030',\r\n                 frame: {\r\n                            back: {\r\n                                color: '#A3A3C2',\r\n                                size: 4\r\n                            },\r\n                            bottom: {\r\n                                color: '#DBB8FF',\r\n                                size: 10\r\n                            },\r\n                            side: {\r\n                                color: '#8099E6',\r\n                                size: 2\r\n                            }\r\n                       }\r\n            }\r\n        },\r\n        title: {text: ''},\r\n        xAxis: {categories: xvalues},\r\n        yAxis: {min:0,max:100,title:{text:\"[%]\"}},\r\n        plotOptions: {\r\n               series: {\r\n                edgeColor:'#000000'\r\n            },\r\n    column: {\r\n        borderColor:\"black\",\r\n        zones: [{\r\n            value: 80, // Values up to 80 (not including) ...\r\n            color: '#ff4000' // ... have the color blue.\r\n        },{\r\n            color: '#00ff80' // Values from 80 (including) and up have the color red\r\n\r\n        }]\r\n          }\r\n                  },\r\n\r\n        series: [\r\n//            {\r\n//            type:\"spline\",\r\n//            name:\"Target[%]\",\r\n//            data:target,\r\n//            showInLegend:false,\r\n//            lineColor: Highcharts.getOptions().colors[10]\r\n//        },\r\n         {\r\n            type:\"column\",\r\n            name: '[%]',\r\n            showInLegend:false,\r\n            data: eff,\r\n            borderColor:\"black\"\r\n            //color: Highcharts.getOptions().colors[9]\r\n        }\r\n    ]\r\n });\r\n };\r\n           });\r\n\r\n              services.factory(\"columnCharPP\", function() {\r\n            return function(eff,target,xvalues,container) {\r\n                Highcharts.chart(container, {\r\n            chart: {\r\n                type: 'column',\r\n                options3d: {\r\n \tenabled: true,\r\n                alpha: 15,\r\n                beta: 15,\r\n                depth: 50\r\n            }\r\n        },\r\n        title: {text: ''},\r\n        xAxis: {categories: xvalues},\r\n        yAxis: {min:0,max:100,title:{text:\"[%]\"}},\r\n\r\n        series: [\r\n            {\r\n            type:\"spline\",\r\n            name:\"Target[%]\",\r\n            data:target,\r\n            showInLegend:false,\r\n            lineColor: Highcharts.getOptions().colors[10]\r\n        },\r\n         {\r\n            type:\"column\",\r\n            name: '[%]',\r\n            showInLegend:false,\r\n            data: eff,\r\n            color: Highcharts.getOptions().colors[9]\r\n        }\r\n    ]\r\n });\r\n };\r\n           });\r\n\r\n           services.factory(\"pieChart\", function() {\r\n              return function(eff, efftext, stops, stopstext, container) {\r\n                Highcharts.chart(container, {\r\n                    chart: {type: 'pie', options3d: {enabled: true,alpha: 45,beta: 0 } },\r\n                         title: { text: '',\r\n                             style: { display:'none'}\r\n                         },\r\n                         tooltip: {\r\n                             pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                         },\r\n                         plotOptions: {\r\n                             pie: {\r\n                                 allowPointSelect: true,\r\n                                 cursor: 'pointer',\r\n                                 depth: 15,\r\n                                 dataLabels: {enabled: true, format: '{point.name}'}\r\n                             }\r\n                         },\r\n                         series: [{type: 'pie', name: '', data: [\r\n                {\r\n                    name: efftext,\r\n                    y: eff,\r\n                    sliced: true,\r\n                    selected: true\r\n                },\r\n                [stopstext, stops]\r\n            ]\r\n                         }]\r\n                     });\r\n                 };\r\n                            });\r\n\r\n      services.factory(\"messages\",[\"growl\",function(growl) {\r\n            return function(type) {\r\n    var config = {};\r\n    switch (type) {\r\n      case \"success\":\r\n        growl.success(\"Done!!!\", config);\r\n        break;\r\n        case \"add\":\r\n        growl.info(\"Produkt jest dodany!!!\", config);\r\n        break;\r\n        case \"update\":\r\n        growl.info(\"Produkt jest zaaktualizowany!!! \", config);\r\n        break;\r\n        case \"delete\":\r\n        growl.info(\"Produkt jest usunięty!\", config);\r\n        break;\r\n         case \"error\":\r\n        growl.error(\"\", config);\r\n        break;\r\n         case \"wrongcode\":\r\n        growl.error(\"Błędny kod !!!\", config);\r\n        break;\r\n        case \"Unauthorized\":\r\n       growl.error(\"Wrong username or password!!!\", config);\r\n       break;\r\n       case \"userNotFound\":\r\n      growl.info(\"User not found!!!\", config);\r\n      break;\r\n        default:\r\n        growl.error(\"Pojawił się błąd, sprobuj ponownie!!!\", config);\r\n    }\r\n  };\r\n     }]);\r\n"]}